@charset "UTF-8";:root{--white:#FFFFFF;--east-bay:#3A4574;--black:#000000;--tan:#D3B47F;--gray:#808080;--mine-shaft:#2E2E2E;--hero-fs:var(--white);--button-color:var(--east-bay);--button-hover:var(--tan);--schedule-fs:var(--black);--schedule-elem:var(--tan);--reviews-bg:var(--east-bay);--reviews-title:var(--tan);--reviews-text:var(--white);--menu-title:var(--black);--gallery-title:var(--white);--gallery-text:var(--white);--contacts-title:var(--black);--contacts-text:var(--mine-shaft);--contacts-elem:var(--tan);--sending-questions-title:var(--black);--sending-questions-input-text:var(--gray);--hamburger-menu:var(--tan)}*,:after,:before{margin:0;padding:0;-webkit-box-sizing:inherit;box-sizing:inherit}a:active,a:focus{outline:0}body,html{height:100%}html{-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth}a,body{color:var(--white)}body{font:400 16px/24px "Poppins",sans-serif;-webkit-transition:.8s;-o-transition:.8s;transition:.8s}a{text-decoration:none}.btn,.btn-reset{border:0;cursor:pointer}.btn-reset{background:0 0;padding:0}input[type=text]{font:inherit/inherit inherit;margin:0}ul{list-style:none}.btn{font:500 18px "Poppins";background:var(--button-color);padding:38px 65px;color:var(--white);-webkit-transition:.8s;-o-transition:.8s;transition:.8s}.btn:active,.btn:focus,.btn:hover{background:var(--button-hover);border-radius:30px}.visibility-hidden{position:absolute;visibility:hidden}.wrapper{min-height:100px;overflow:hidden}.container{position:relative;max-width:1200px;padding:0 15px;margin:0 auto}.main-header{width:100%;min-height:55px;position:absolute;top:55px;z-index:100}.main-header__row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.main-header__row,.main-nav__list,.number{display:-webkit-box;display:-ms-flexbox;display:flex}.main-nav__item a{display:inline-block;color:var(--hero-fs);cursor:pointer;font-weight:500}.main-nav__item a::after{background:var(--east-bay);display:block;content:"";height:4px;width:0%;-webkit-transition:width .3s ease-in-out;-moz--transition:width .3s ease-in-out;-o-transition:width .3s ease-in-out;transition:width .3s ease-in-out}.main-nav__item a:hover:after{width:100%}.main-nav__item:not(:last-child){margin-right:45px}.number::before{content:url(/img/number.svg);width:24px;height:24px;margin-right:14px}#menu__toggle{opacity:0;display:none}.hero{background:url(/img/hero-bg.jpg) 0 0/cover no-repeat;position:relative;min-height:901px}.hero__content{padding-top:264px}.hero__content h3{font-weight:500;font-size:24px;line-height:32px;letter-spacing:.06em;-webkit-font-feature-settings:"pnum" on,"lnum" on;font-feature-settings:"pnum" on,"lnum" on;margin-bottom:24px;text-transform:uppercase}.hero__content p{max-width:1168px;font-weight:700;font-size:64px;line-height:88px;margin-bottom:40px}.social-media{position:absolute;top:562px;right:15px}.social-media__item,.social-media__list{display:-webkit-box;display:-ms-flexbox;display:flex}.social-media__item{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:48px;height:48px;-webkit-box-sizing:border-box;box-sizing:border-box;border:1px solid #fff;border-radius:50px;cursor:pointer;-webkit-transition:.8s;-o-transition:.8s;transition:.8s}.social-media__item:active,.social-media__item:focus,.social-media__item:hover{border:1px solid #d3b47f}.social-media__item:not(:last-child){margin-right:25px}.social-media__item a{font-weight:600;text-align:center;-webkit-font-feature-settings:"pnum" on,"lnum" on;font-feature-settings:"pnum" on,"lnum" on}.schedule{min-height:808px}.schedule__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:79px}.schedule__list{color:var(--schedule-fs)}.schedule__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;line-height:32px}.schedule__item h3{font-weight:600;font-size:24px;margin-bottom:10px}.schedule__item p{display:inline;font-size:18px}.schedule__item span{width:5px;height:5px;background:#d3b47f;border-radius:50%;margin-right:10px;margin-left:10px}.schedule__item--border{max-width:469px;padding-bottom:20px;margin-bottom:20px;border-bottom:1px solid #e7e7e7}.schedule__photo{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}.schedule__photo img{width:323px;height:486px;z-index:2}.schedule__photo-one{display:block;margin-right:22px;margin-top:152px}.schedule__photo-two{display:block}.schedule__photo-elem{position:absolute;width:471px;height:502px;top:52px;left:97px;border:2px solid var(--schedule-elem);z-index:1}.reviews{background:var(--reviews-bg);min-height:782px}@media screen and (max-width:1170px){.schedule__row{-ms-flex-pack:distribute;justify-content:space-around}.schedule__photo-elem{display:none}.schedule__photo img{width:249px;height:367px}.schedule__photo-one{margin-right:22px;margin-top:152px}}@media screen and (max-width:1020px){.schedule__row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.schedule__list{margin-bottom:20px}}@media screen and (max-width:950px){.main-header__row,.main-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.main-nav__list{-ms-flex-item-align:center;align-self:center}.main-nav__item:not(:last-child){margin-right:0}#menu__toggle{opacity:0;display:block}.menu__btn{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:fixed;top:20px;left:20px;width:26px;height:26px;cursor:pointer;z-index:1}.menu__box,.menu__btn>span,.menu__btn>span::after,.menu__btn>span::before{display:block;position:absolute;width:100%;height:3px;background-color:var(--white)}.menu__btn>span::before{content:"";top:-9px}.menu__btn>span::after{content:"";top:9px}.menu__box{position:fixed;visibility:hidden;top:0;left:-100%;width:300px;height:100%;margin:0;padding:80px 0;list-style:none;text-align:center;background-color:var(--hamburger-menu);-webkit-box-shadow:1px 0 6px rgba(0,0,0,.2);box-shadow:1px 0 6px rgba(0,0,0,.2)}.menu__item{display:block;padding:20px 40px;text-decoration:none;font-size:20px}#menu__toggle:checked~.menu__btn>span{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}#menu__toggle:checked~.menu__btn>span::before{top:0;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}#menu__toggle:checked~.menu__btn>span::after{top:0;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}#menu__toggle:checked~.menu__box{visibility:visible;left:0}}@media screen and (max-width:800px){.social-media{position:absolute;top:180px;left:15px}}@media screen and (max-width:720px){.hero{min-height:750px;background-color:url(/img/hero-bg.jpg) 0 0/cover no-repeat}.hero__content h3{font-size:20px;margin-bottom:20px}.hero__content p{font-size:44px;line-height:68px;margin-bottom:30px}.hero__btn{padding:28px 55px;font-size:18px}}@media screen and (max-width:550px){.schedule__photo img{display:none}}@media screen and (max-width:510px){.hero__content h3{font-size:20px;margin-bottom:15px}.hero__content p{font-size:30px;line-height:58px;margin-bottom:25px}.hero__btn{padding:18px 45px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */